@use "sass:math";

/*
 * icon-mask
 */
@mixin icon-mask($url, $background-color) {
  content: "";
  display: block;
  -webkit-mask-image: url(#{$url});
  mask-image: url(#{$url});
  -webkit-mask-repeat: no-repeat;
  mask-repeat: no-repeat;
  -webkit-mask-position: center;
  mask-position: center;
  -webkit-mask-size: 100%;
  mask-size: 100%;
  background-color: $background-color;
  transition: background-color 0.3s ease, transform 0.2s ease;
}

// 使用例
// &::before {
//   width: $size-22;
//   height: $size-16;
//   @include icon-mask('/assets/img/common/icon/icon-mail.svg', #fff);
// }

/*
 * font-size可変用
 */
@function clamp_vw($num, $device: pc) {
  // PCの場合のデフォルトの最大幅
  $minWidth: 1200;
  $maxWidth: 1600;

  // スマートフォンの場合
  @if $device == sp {
    $minWidth: 365;
    $maxWidth: 1199;
  }

  $val_max: $num * 1px;
  $val_vw: math.div(math.div($num * 100 * 1000, $maxWidth), 1000);
  $val_min: (math.div($minWidth * $val_vw, 100)) * 1px;

  @return clamp(#{$val_min}, #{$val_vw * 1vw}, #{$val_max});
}

// /**
//  * pxをvwに変換する
//  */
// @function vw($px, $base: 375px) {
//   $value: $px;

//   // 単位がpx以外の場合は警告を出してそのまま返す
//   @if (unit($px) != "px") {
//     @warn 'vw()の引数にpx以外の値を指定しても計算できません';
//     @return $value;
//   }

//   $value: (strip-unit($px) / strip-unit($base)) * 100vw;

//   @return $value;
// }

// -------------------------------
// 数値から単位を取り除く
// -------------------------------
@function strip-unit($number) {
  @if type-of($number) == "number" and not unitless($number) {
    @return calc(
      $number / math.div($number, math.div($number, $number * 0 + 1))
    );
  }

  @return $number;
}

// -------------------------------
// px→rem
// -------------------------------
@function rem($px, $base: 16px) {
  $value: $px;

  // 単位がpx以外の場合は警告を出してそのまま返す
  @if (unit($px) != "px") {
    @warn 'rem()の引数にpx以外の値を指定しても計算できません';
    @return $value;
  }

  $value: (strip-unit($px) / strip-unit($base)) * 1rem;
  @return $value;
}

// -------------------------------
// px→vw
// -------------------------------
@function vw($px, $base: 375px) {
  $value: $px;

  // 単位がpx以外の場合は警告を出してそのまま返す
  @if (unit($px) != "px") {
    @warn 'vw()の引数にpx以外の値を指定しても計算できません';
    @return $value;
  }

  $value: (math.div(strip-unit($px), strip-unit($base))) * 100vw;

  @return $value;
}

// -------------------------------
// px→vw（min,max指定あり）
// -------------------------------
$pc-baseWidth: 1200px;
$sp-baseWidth: 750px;
$max: 1;
$min: 2;

@function vw_min($px, $base: $pc-baseWidth, $max: $max) {
  $value: $px;

  // 単位がpx以外の場合は警告を出してそのまま返す
  @if (unit($px) != "px") {
    @warn 'vw()の引数にpx以外の値を指定しても計算できません';
    @return $value;
  }

  $value: (math.div(strip-unit($px), strip-unit($base))) * 100vw;

  @return min($value, $px * $max);
}

@function vw_max($px, $base: $sp-baseWidth, $min: $min) {
  $value: $px;

  // 単位がpx以外の場合は警告を出してそのまま返す
  @if (unit($px) != "px") {
    @warn 'vw()の引数にpx以外の値を指定しても計算できません';
    @return $value;
  }

  $value: math.div(strip-unit($px), strip-unit($base)) * 100vw;

  @return max($value, $px / $min);
}

// 出力例
// font-size: vw_min(16px, 20px);
// => font-size: min(1.3333333333vw, 20px);
